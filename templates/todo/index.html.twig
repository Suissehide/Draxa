{% block todo %}

    <div class="todo__container">
        <div class="todo__content">
            <div class="todo__header">
                <div class="todo__title">
                    <h3>Liste des tâches</h3>
                    <div class="todo__flex">
                        <div class="todo__date">01/01/2022</div>
                        ●
                        <div class="todo__task-count">4 tâches</div>
                    </div>
                </div>
                <button type="button" class="close">
                    &times;
                </button>
            </div>
            <div class="input__flex">
                <div class="todo__input">
                    <span class="glyphicon glyphicon-plus"></span>
                    <input type="text" id="todo__add" name="todo__add" required="required" class="form-control" placeholder="Saisissez votre tâche">
                </div>
                <button class="btn btn-primary todo__add">Ajouter la tâche</button>
                <button class="btn btn-primary todo__clear">Vider la liste</button>
            </div>
            <div class="todo__tasks">
                <ul class="todo__list"></ul>
            </div>
        </div>
    </div>

{% endblock %}

{% block todo_javascripts %}

    <script type="text/javascript">
        let open = localStorage.getItem('openTodo') === 'true';
        if (open) openTodo();

        $('#todo-list, .todo__content .close').on('click', function() {
            localStorage.setItem('openTodo', !open);
            open = !open;
            openTodo();
        })

        function openTodo() {
            $('.todo__container').toggle();
            if (open) $('.container').css({paddingTop: 340 + 'px'})
            else $('.container').css({paddingTop: 0 + 'px'})
        }

        var tasksNb = 0

        function loadTodos() {
            $.ajax({
                url: "{{ path('todo_get') }}",
                type: "GET",
                dataType: "json",
                success: function (resp) {
                    if (resp) {
                        tasksNb = Object.keys(resp).length;
                        setTaskNumber();
                        setTaskNotification();
                        $.each(resp, function(i, obj) {
                            let split = obj.datetime.split(' ');
                            let new_date = new Date(split[0].split('/')[2], split[0].split('/')[1] - 1, split[0].split('/')[0], split[1].split(':')[0], split[1].split(':')[1]);
                            let date_task = new Intl.DateTimeFormat("fr-FR", { month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new_date);
                            let enable = obj.enable ? 'checked' : '';
                            let task = `
                            <li data-id="` + obj.id + `">
                                <div class="form-check">
                                    <input class="inp-cbx" id="task_` + obj.id + `" type="checkbox" ` + enable + `/>
                                    <label class="cbx" for="task_` + obj.id + `"></label>
                                    <span class="todo__action" contenteditable="true">` + obj.description + `</span>
                                </div>
                                <div class="todo__button-bar">
                                    <div class="todo__time">` + date_task + `</div>
                                    <div class="todo__delete"><i class="glyphicon glyphicon-trash"></i></div>
                                </div>
                            </li>`
                            $(".todo__list").append(task);
                        });
                    } else {
                        errorAlert('impossible de récuperer la liste des tâches');
                    }
                }
            })
        }

        function setTodoDate() {
            let today = new Date();
            var options = {
                year: "numeric",
                month: "2-digit",
                day: "numeric"
            };
            let date = new Intl.DateTimeFormat("fr-FR", options).format(today);

            $('.todo__date').text(date);
        }

        loadTodos();
        setTodoDate();

        function setTaskNumber() {
            $('.todo__task-count').text(tasksNb + ((tasksNb > 1) ? ' tâches' : ' tâche'));
        }

        function setTaskNotification() {
            $('.todo__notification').text((tasksNb > 9) ? '9+' : tasksNb);
        }

        /***** ADD *****/
        $('#todo__add').bind("enterKey",function(e){
            addTask();
        });

        $('#todo__add').keyup(function(e){
            if(e.keyCode === 13) $(this).trigger("enterKey");
        });

        $('.todo__add').click(function() {
            addTask();
        });

        $('.todo__input .glyphicon').on('click', function() {
            addTask();
        })

        function addTask() {
            let today = new Date();
            let time = new Intl.DateTimeFormat("fr-FR", { month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(today);
            let text = $('#todo__add').val();

            $('#todo__add').val('');

            $.ajax({
                url: "{{ path('todo_add') }}",
                type: "POST",
                dataType: "json",
                data: {
                    description: text
                },
                success: function (id) {
                    if (id) {
                        let task = `
                        <li data-id="` + id + `">
                            <div class="form-check">
                                <input class="inp-cbx" id="task_` + id + `" type="checkbox"/>
                                <label class="cbx" for="task_` + id + `"></label>
                                <span class="todo__action" contenteditable="true">` + text + `</span>
                            </div>
                            <div class="todo__button-bar">
                                <div class="todo__time">` + time + `</div>
                                <div class="todo__delete"><i class="glyphicon glyphicon-trash"></i></div>
                            </div>
                        </li>`
                        $(".todo__list").append(task);

                        tasksNb += 1;
                        setTaskNumber();
                        setTaskNotification();
                    } else {
                        errorAlert('impossible d\'ajouter une tâche');
                    }
                }
            })
        }

        /***** REMOVE *****/
        $('.todo__list').on('click', '.todo__delete', function() {
            let id = $(this).parents('li').attr('data-id');
            removeTask(id);
        })

        function removeTask(taskId) {
            $.ajax({
                url: "{{ path('todo_remove') }}",
                type: "POST",
                dataType: "json",
                data: {
                    taskId: taskId,
                },
                success: function (resp) {
                    if (resp) {
                        tasksNb -= 1;
                        setTaskNumber();
                        setTaskNotification();
                        $('li[data-id=' + taskId +']').remove();
                    } else {
                        errorAlert('impossible de vider la liste des tâches');
                    }
                }
            })
        }

        $('.todo__clear').on('click', function() {
            let r = confirm("Êtes-vous sûr de vouloir vider la liste des tâches ?");
            if (!r) return;
            $.ajax({
                url: "{{ path('todo_clear') }}",
                type: "POST",
                dataType: "json",
                data: {},
                success: function (resp) {
                    if (resp) {
                        tasksNb = 0;
                        setTaskNumber();
                        setTaskNotification();
                        $('.todo__list > li').remove();
                    } else {
                        errorAlert('impossible de vider la liste des tâches');
                    }
                }
            })
        });

        $('.todo__list').on('change', '.form-check input', function() {
            let taskId = $(this).parents('li').attr('data-id');
            let enable = $(this).is(':checked');

            $.ajax({
                url: "{{ path('todo_enable') }}",
                type: "POST",
                dataType: "json",
                data: {
                    taskId: taskId,
                    enable: enable
                },
                success: function (resp) {
                    if (resp) {
                        return;
                    } else {
                        errorAlert('impossible de changer l\'état de la tâche');
                    }
                }
            })
        });

        $('.todo__list').on('keyup', '.form-check .todo__action', function() {
            let taskId = $(this).parents('li').attr('data-id');
            let description = $(this).text();

            $.ajax({
                url: "{{ path('todo_edit') }}",
                type: "POST",
                dataType: "json",
                data: {
                    taskId: taskId,
                    description: description
                },
                success: function (resp) {
                    if (resp) {
                        return;
                    } else {
                        errorAlert('impossible de changer l\'état de la tâche');
                    }
                }
            })
        });


        var alert_pos = 0;
        function errorAlert(message) {
            $('body').prepend(
                '<div class="row alert alert-danger text-center box-shadow" style="top:' + alert_pos + 'px;"><span class="closebtn" onclick="this.parentElement.style.display=\'none\';">&times;</span>Erreur : ' + message + '</div>'
            );
            alert_pos += 72;
        }

        function formatDate(input) {
            let datePart = input.match(/\d+/g),
                year = datePart[2] //.substring(2),  get only two digits
                month = datePart[1],
                day = datePart[0];
            return year + '-' + month + '-' + day;
        }
    </script>

{% endblock %}
